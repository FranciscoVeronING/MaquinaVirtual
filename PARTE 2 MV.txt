-Agregar 3 segmentos, 2 ES, 3 SS , 4 KS
-Definir 3 2 registros 6 SP y 7 BP 
-Modificar tabla descriptora de segmento (es dinamica)
opcional: Asignarle posicion a constante Cs, ds, es... etc...
-Agregar directivas:
	-Include, el codigo se inserta en el lugar de la directiva.
	-Segmento, indica cantidad de cytes a reservar para cada uno, puede ser, data, extra, stack.
	-Tamaño, cantidad de celdas de memoria a cada segmento, si no hay, se utiliza 1024. el tamanio debe estar entre 0 y 0xffff (en decimal: 0 y 65535).
-Agregar lectura de strings: se lee byte por byte y termina al encontrar el  byte 0x00;
-Agregar constantes, estas se encuentran en los rotulos. Pueden estar ubicadas en cualquier lugar del codigo. Hay 2 tipos:
	-Constantes Inmediatas (EQU). (a fren se le ocurrio plantearlas en un vector)
	-Constantes Strings, permite almacenar una cadena de caracteres en KS y el offset se almacena en el segmento.
-Agregar a SYS:
	-3 almacena en un rango de celdas de memoria un string ingresado por teclado.
	-4 imprime por pantalla el rango de celdas que almacena un string. El cursor queda una linea por debajo.
	-7 Limpia la pantalla de la consola.
	-F Pausa la ejecucion y genera un archivo imagen en el estado actual de la mv.
-Operando de memoria: Se le agrega un modificador a la izquierda de [], la cantidad de bytes a acceder.
Gestion pila:
	-Agregar trabajo con registros.
	-Instrucciones:
		-Push: Almacena un dato de 4 bytes al tope de la pila
		-Pop: Extrae el dato del tope de la pila y lo lmacena en el unico operando.
		-Call: LLama a una subrutina.
		-Ret: Retorna desde una subrutina.
Entry point:
	Indica a la mv donde comenzar la ejecucion del programa, se usa el rotulo _start. Si no se encuentra, se ejecuta la primera instruccion del programa.

---
-El programa posee 4 parametros opcionales para ejecutar:
	-.vmx Tiene que existir este o vmi
	-.vmi Tiene que existir este o vmx
	-m=M Indica el tamaño de la memoria principal, expresado en kib, si no esta es 16kib
	--d Assembler pa.
PREGUNTAR:
Si existe CS, en la TBS, va en la posicion 1 o 0, asumiendo que existe cs.
En la parte de ASCII, cuando hacemos una lectura con el sys, los caracteres imprimibles son de ascii comun o ascii extendido?

